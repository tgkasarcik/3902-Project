Author: Tommy Kasarcik
Date: 2/19/2022
File Reviewed: Goomba.cs
Author of Reviewed File: Eric Chen
Code Smells Focused on:
  -Excessive use of literals
  -Duplicated Code
  -Comments
  -Conditional Complexity
  -Large class
  -Inconsistent names
  -Data Class
  -Indecent Exposure
  -Refused Bequest
  -Long Method
  
Comments:
  Overall, the code in this file seems to be a pretty high quality.  From a code smell perspective, this file is quite solid.  There is not an excessive use of literals.
  There is no duplicated code.  Comments are one way this class could be improved, since there currently is not a single comment in the entire file.  While there are no 
  super complicated methods in this class, comments are always a good way to improve code quality.  This class does not have a single if statement, and is therefore 
  very good on conditional complexity.  This class is not longer than it needs to be.  The naming style used here could be improved.  Specifically, private variables
  start with both an uppercase and lowercase letter.  Try just picking one style for each type of variable and sticking with it.  This class is not a data class.  This class
  does not have any unnecessary public members.  This class fully implements all of its inherited interfaces.  There are no long methods in this class.
  
Suggestion:
  One suggestion I have for this class is to simplify the constructor.  Right now it takes 6 parameters.  I think this number could be reduced significantly.  Specifically, 
  I think we could remove all of the bool parameters from the constructor.  I don't think this would be too much of a problem, because I think it is highly liklely that 
  everytime a new Goomba is created it will be facing and moving the same direction.  
