Author: Tommy Kasarcik
Date: 3/28/2022
File Reviewed: SoundFactory.cs
Author of Reviewed File: Cat Quamme
Code Smells Focused on:
  -Excessive use of literals
  -Duplicated Code
  -Comments
  -Conditional Complexity
  -Large class
  -Inconsistent names
  -Data Class
  -Indecent Exposure
  -Refused Bequest
  -Long Method
  
Comments:
  The code in this file is of a high quality overall.  There is no excessive use of literals.  There is no duplicated code.  Comments are sufficient throughout.
  There are currently no conditionals, so there is no unnecessary conditonal complexity.  This class is not larger than it needs to be.  Variables are named
  in a consistent way.  This is not a data class.  There is no indecent exposure, becuse there are no public members in this class.  There is no refused bequest, 
  becuase this class does not implement an interface.  There are no long methods.  One interesting I noticed about this code is that in both GetSoundEffect and
  GetSong the string parameter is called "effecteName".  Is this is typo or is this name intentional?  
  
Suggestion:
  At this state, I do not have any suggestions for improving this class.  Looks good overall! 
