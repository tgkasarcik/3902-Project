Author: Tommy Kasarcik
Date: 4/8/2022
Sprint: 4
File Reviewed: HUD.cs
Author of Reviewed File: Eric Chen
Time: 8 Min.
Code Smells Focused on:
  -Excessive use of literals
  -Duplicated Code
  -Comments
  -Conditional Complexity
  -Large class
  -Inconsistent names
  -Data Class
  -Indecent Exposure
  -Refused Bequest
  -Long Method
  
Comments:
  Overall the code in this class is of a very high quality.  There is a little bit of unnecessary literals in this class.  In the getValue() method, 
  a value is returned based on a string key that is passed into it.  This is a very error-prone strategy for implementing this behavior.  There is a bit
  of duplicated code in DeathReset() and GameOverReset().  Maybe these could be simplified with the use of a private helper method.  Comments are pretty
  good throughout.  There is no unnecessary conditional complexity.  This class is not too large.  Variables are not named consistently throughout.  
  For private variables, some start lower cased and others start upper cased.  In general, private members should start lower cased and public members
  should start upper cased.  This is not a data class.  There is no indecent exposure since there is only 1 public member in this class.  There is no
  refused bequest.  There are no overly long methods.  Overall, the code in this class is of a decently high quality.  
  
  
Suggestion:
  Replace the switch case in getValue with either methods that each return a specific value or create an enum type that is passed into the method instead.  
